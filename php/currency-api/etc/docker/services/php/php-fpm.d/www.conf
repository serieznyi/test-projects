env[ICU_DATA]=/opt/icu/

[global]
error_log = /proc/self/fd/2
events.mechanism = epoll

[www]
clear_env = no

user=www-data

; TODO расмотреть возможность использования listen = /sock/docker.sock
; https://medium.com/@shrikeh/setting-up-nginx-and-php-fpm-in-docker-with-unix-sockets-6fdfbdc19f91
; https://hcbogdan.com/php/2016/09/16/php-fpm-dynamic/

; Динамически расчитываем кол-во запускаемых процессов на основе следующих значений
; pm.max_children
; pm.start_servers - Значение по умолчанию: min_spare_servers + (max_spare_servers - min_spare_servers) / 2
; pm.min_spare_servers
; pm.max_spare_servers
pm = dynamic

; Total Max Processes = (Total Ram - (Used Ram + Buffer)) / (Memory per php process)
pm.max_children = 100

; Минимальное кол-во процессов, которое fpm будет держать запущеными на случай
; появления новых запросов
pm.min_spare_servers = 10

; Максимальное кол-во процессов, которое fpm будет держать запущеными на случай
; появления новых запросов
pm.max_spare_servers = 20

; Кол-во обработаных запросов, после которых процесс будет убит, что бы
; избежать утечки памяти
pm.max_requests = 500

; The access log file
access.log = /proc/self/fd/2

; The log file for slow requests
slowlog = /proc/self/fd/2

; Если запрос отработал медленне указанного времени - он медленный
request_slowlog_timeout = 2s

; Через минуту запрос убивается, что бы не занимать процесс
request_terminate_timeout = 1m

; Clear environment in FPM workers
clear_env = no

pm.start_servers=15