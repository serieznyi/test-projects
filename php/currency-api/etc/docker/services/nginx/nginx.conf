user  nginx;

# Определяет количество рабочих процессов. Его лучше устанавливать в auto в новых версиях.
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;

    # Будет принимать максимально возможное количество соединений
    multi_accept on;
}


http {
    proxy_max_temp_file_size 0;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$scheme://$host:$server_port $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # Метод отправки данных sendfile более эффективен, чем стандартный метод read+write
    sendfile off;

    # Определяет максимальное количество файлов, информация о которых будет содержаться в кеше
    open_file_cache max=200000 inactive=20s;

    # Определяет через какое время информация будет удалена из кеша
    open_file_cache_valid 30s;

    # Будет кешировать информацию о тех файлах, которые были использованы хотя бы 2 раза
    open_file_cache_min_uses 2;

    # Будет кешировать информацию об отсутствующих файлах
    open_file_cache_errors on;

    keepalive_timeout  5;

    keepalive_requests 100;

    # Если клиент перестал читать отвечать, Nginx будет сбрасывать соединение с ним
    reset_timedout_connection on;

    client_max_body_size 100m;

    # Будет ждать 10 секунд тело запроса от клиента, после чего сбросит соединение
    client_body_timeout 10;

    gzip  off;
    gzip_disable "msie6";
    gzip_comp_level 5;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    upstream backend
    {
        server currency_api_php:9000;
    }

    include /etc/nginx/conf.d/*.conf;
}
